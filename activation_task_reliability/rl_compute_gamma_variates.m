function rl_compute_gamma_variates()
% does single subject gamma variate fit voxelwise
% This script assumes we have the AFNI matlab library and others function of the reliability toolbox in our path
% This code has been described in Compere et al. (2020).

dsmask = '/media/siegleglab/reliability/binminicolin+orig.BRIK';

% We start by storing the paths of the irf data generated by
% rl_cbtsretssregs_auc.csh and create a folder to store our gamma variates
% data
data_master = struct('look_for_controls_data',{'/data/Siegle/reliability/ssanal/sret/ssregs_auc/sret2*-negtrials.irf+orig.BRIK'},...
                     'look_for_patients_cohort1_data',{'/data/Siegle/reliability/ssanal/sret/ssregs_auc/sret5*-negtrials.irf+orig.BRIK'},...
                     'look_for_patients_cohort2_data',{'/data/Siegle/reliability/ssanal/sret/ssregs_auc/sret6*-negtrials.irf+orig.BRIK'});
 
controls=dir(data_master.look_for_controls_data);
patients_cohort1=dir(data_master.look_for_patients_cohort1_data);
patients_cohort2=dir(data_master.look_for_patients_cohort2_data);
all=[controls; patients_cohort1; patients_cohort2];

fdir='ssanal/sret/ssregs_gammavar_computed_with_matlab';
mkdir(fdir);
cd(fdir);

% For each participant, in his/her own folder, we start by rewriting every irf file in this folder rescaling the data
% from the first subbrik and then we write the output of the gamma fit
for data=1:size(all,1)
    [data_to_rescale, data_to_rescale_info]=BrikLoad(fullfile(all(data).folder,all(data).name));
    for brik=1:size(data_to_rescale,4)
       data_rescaled(:,:,:,brik)=data_to_rescale(:,:,:,brik)-data_to_rescale(:,:,:,1);
    end
   %outinfo=dmaskinfo;
   data_to_rescale_info.RootName=strcat(all(data).name(1:end-10),'_rescaled');
   optOut.Scale = 1;
   optOut.Prefix = data_to_rescale_info.RootName;
   optOut.verbose = 0;
   WriteBrik(data_rescaled,data_to_rescale_info,optOut);
   voxgamfitwithheight({strcat(data_to_rescale_info.RootName,'+orig.BRIK')}, dsmask);
    for briknum=0:3
        movefile(sprintf('gamfitb%d+orig.BRIK',briknum),sprintf('gamfitb%d_%s+orig.BRIK',briknum,data_to_rescale_info.RootName(1:end-14)));
        movefile(sprintf('gamfitb%d+orig.HEAD',briknum),sprintf('gamfitb%d_%s+orig.HEAD',briknum,data_to_rescale_info.RootName(1:end-14)));
    end
   
   name_post=all(data).name;
   name_post(5)=name_post(5)+2;
   [data_to_rescale, data_to_rescale_info]=BrikLoad(fullfile(all(data).folder,name_post));
    for brik=1:size(data_to_rescale,4)
       data_rescaled(:,:,:,brik)=data_to_rescale(:,:,:,brik)-data_to_rescale(:,:,:,1);
    end
   %outinfo=dmaskinfo;
   data_to_rescale_info.RootName=strcat(name_post(1:end-10),'_rescaled');
   optOut.Scale = 1;
   optOut.Prefix = data_to_rescale_info.RootName;
   optOut.verbose = 0;
   WriteBrik(data_rescaled,data_to_rescale_info,optOut);
   voxgamfitwithheight({strcat(data_to_rescale_info.RootName,'+orig.BRIK')}, dsmask);
    for briknum=0:3
        movefile(sprintf('gamfitb%d+orig.BRIK',briknum),sprintf('gamfitb%d_%s+orig.BRIK',briknum,data_to_rescale_info.RootName(1:end-14)));
        movefile(sprintf('gamfitb%d+orig.HEAD',briknum),sprintf('gamfitb%d_%s+orig.HEAD',briknum,data_to_rescale_info.RootName(1:end-14)));
    end
end